# *args:
# *args використовується для передачі довільної кількості позиційних аргументів у функцію.
# Коли ви вказуєте *args в сигнатурі функції, це означає, що функція може приймати будь-яку кількість позиційних аргументів.

a, b, *c = [True, 7, 'hello', 9, '54', 67, 4, 3]
print(a, b, c)  # True 7 ['hello', 9, '54', 67, 4, 3]

d, *e ,f = [2, 3]
print(d, e, f)  # 2 [] 3

s = [1, 11]
print(list(range(*s)))


def f(a, b, c, d):
    print(a, b, c, d)

f(1, 2, 3, 4)
a = ('hello', True, 1, [345])
f(*a)  # hello True 1 [345]


def func(*args):
    sum = 0
    for arg in args:
        sum += arg
    return sum

print(func(1, 2, 3, 4, 5, 6, 7))


###################################################################

# **kwargs використовується для передачі довільної кількості іменованих аргументів у функцію.
# Коли ви вказуєте **kwargs в сигнатурі функції, це означає, що функція може приймати будь-яку кількість іменованих аргументів у вигляді словникового об'єкта.

def f(**kwargs):
    for k, v in kwargs.items():
        print(k, v)

f(a=1, b=5, c=10, name='Vovik')  

def kw(*args, **kwargs):
    print(args, kwargs)
    
kw(1, 2, 3, 4, a=5, b=6, c=7)  # (1, 2, 3, 4) {'a': 5, 'b': 6, 'c': 7}

####################################################################

a = [1, 2, 3, 4]
print(a)  # [1, 2, 3, 4]
print(*a)  # 1 2 3 4 -  кожен елемент окремий