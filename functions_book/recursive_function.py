# Рекурсія в програмуванні — це техніка, коли функція викликає сама себе для вирішення задачі. 
# В Python рекурсія є дозволеною і зручною технікою програмування, особливо при розв'язанні задач, які можна поділити на менші подзадачі.
# В рекурсії повинен бути вихід, тобто умова при якій функція перестає виконуватися, напирклад if else.

# def rec(x):
#     if x < 10:
#         print(x)
#         rec(x + 2)
#         print(x)

# rec(1)


def fact(x):
    if x == 1:
        return 1  # Базовий випадок: Якщо x дорівнює 1, функція повертає 1, оскільки факторіал 1 є 1.
    else:
        return fact(x - 1) * x  # Рекурсивний випадок: У випадку, коли x більше 1, функція викликає саму себе з аргументом x - 1 і 
                                # помножує результат на x. Це виконується до того часу, поки x не стане рівним 1, і функція розгортається назад.

print(fact(5))  # Факторіла 4 буде: 4 * 3, 3 * 2, 2 * 1, 1 * 1, 1 * 2, 2 * 3, 6 * 4, 24 * 5 = 120!!!!! 


#  Fibonacci 


def fib(n):
    if n == 1:
        return 0  # У випадку, коли n рівне 1, функція повертає 0 (перше число Фібоначчі).
    if n == 2:
        return 1  # У випадку, коли n рівне 2, функція повертає 1 (друге число Фібоначчі).
    else:
        return fib(n-1) + fib(n-2)
      
print(fib(8)) # (0),(1),(0 + 1 = (1)),(1 + 1 = (2)),(1 + 2 = (3)),(2 + 3 = (5)),(5 + 3 = (8),)(8 + 5 = (13)) 

#  Palindrome


def palindrom(s):
    if len(s) <= 1:
        return True
    elif s[0]!=s[-1]:
        return False
    else:
        return palindrom(s[1:-1])  # Додавання рекурсивного виклику в else гарантує, що функція буде викликатися рекурсивно для внутрішньої частини рядка (s[1:-1]). 
                                   # Це дозволяє рекурсивно перевіряти всі символи в середині рядка і гарантує, що ви перевірите, чи рядок є паліндромом на всій його довжині.

print(palindrom("tenet"))


#


def rec(s):
    if len(s) == 1 or len(s) == 2:
        return s
    return s[0] + '(' + rec(s[1:-1]) + ')' + s[-1]  # s[1:-1] відбувається вирізання рядка, в якому ви вилучаєте перший та останній символи. 
                                                    # Тобто, ви рекурсивно викликаєте функцію для середньої частини рядка.
 
s = input()
print(rec(s))


